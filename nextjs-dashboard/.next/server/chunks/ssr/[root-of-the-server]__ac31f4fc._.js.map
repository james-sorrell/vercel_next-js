{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 13, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/andre/Documents/workspace/.git/vercel_next-js/nextjs-dashboard/auth.config.ts"],"sourcesContent":["import type { NextAuthConfig } from 'next-auth';\r\n \r\nexport const authConfig = {\r\n  pages: {\r\n    signIn: '/login',\r\n  },\r\n  callbacks: {\r\n    authorized({ auth, request: { nextUrl } }) {\r\n      const isLoggedIn = !!auth?.user;\r\n      const isOnDashboard = nextUrl.pathname.startsWith('/dashboard');\r\n      if (isOnDashboard) {\r\n        if (isLoggedIn) return true;\r\n        return false; // Redirect unauthenticated users to login page\r\n      } else if (isLoggedIn) {\r\n        return Response.redirect(new URL('/dashboard', nextUrl));\r\n      }\r\n      return true;\r\n    },\r\n  },\r\n  providers: [], // Add providers with an empty array for now\r\n} satisfies NextAuthConfig;"],"names":[],"mappings":";;;AAEO,MAAM,aAAa;IACxB,OAAO;QACL,QAAQ;IACV;IACA,WAAW;QACT,YAAW,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,EAAE;YACvC,MAAM,aAAa,CAAC,CAAC,MAAM;YAC3B,MAAM,gBAAgB,QAAQ,QAAQ,CAAC,UAAU,CAAC;YAClD,IAAI,eAAe;gBACjB,IAAI,YAAY,OAAO;gBACvB,OAAO,OAAO,+CAA+C;YAC/D,OAAO,IAAI,YAAY;gBACrB,OAAO,SAAS,QAAQ,CAAC,IAAI,IAAI,cAAc;YACjD;YACA,OAAO;QACT;IACF;IACA,WAAW,EAAE;AACf","debugId":null}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/andre/Documents/workspace/.git/vercel_next-js/nextjs-dashboard/auth.ts"],"sourcesContent":["import NextAuth from 'next-auth';\r\nimport Credentials from 'next-auth/providers/credentials';\r\nimport { authConfig } from './auth.config';\r\nimport { z } from 'zod';\r\nimport type { User } from '@/app/lib/definitions';\r\nimport bcrypt from 'bcrypt';\r\nimport postgres from 'postgres';\r\n \r\nconst sql = postgres(process.env.POSTGRES_URL!, { ssl: 'require' });\r\n \r\nasync function getUser(email: string): Promise<User | undefined> {\r\n  try {\r\n    const user = await sql<User[]>`SELECT * FROM users WHERE email=${email}`;\r\n    return user[0];\r\n  } catch (error) {\r\n    console.error('Failed to fetch user:', error);\r\n    throw new Error('Failed to fetch user.');\r\n  }\r\n}\r\n \r\nexport const { auth, signIn, signOut } = NextAuth({\r\n  ...authConfig,\r\n  providers: [\r\n    Credentials({\r\n      async authorize(credentials) {\r\n        const parsedCredentials = z\r\n          .object({ email: z.string().email(), password: z.string().min(6) })\r\n          .safeParse(credentials);\r\n \r\n        if (parsedCredentials.success) {\r\n            const { email, password } = parsedCredentials.data;\r\n            const user = await getUser(email);\r\n            if (!user) return null;\r\n            const passwordsMatch = await bcrypt.compare(password, user.password);\r\n   \r\n            if (passwordsMatch) return user;\r\n        }\r\n \r\n        return null;\r\n      },\r\n    }),\r\n  ],\r\n});"],"names":[],"mappings":";;;;;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AACA;;;;;;;AAEA,MAAM,MAAM,CAAA,GAAA,6LAAA,CAAA,UAAQ,AAAD,EAAE,QAAQ,GAAG,CAAC,YAAY,EAAG;IAAE,KAAK;AAAU;AAEjE,eAAe,QAAQ,KAAa;IAClC,IAAI;QACF,MAAM,OAAO,MAAM,GAAW,CAAC,gCAAgC,EAAE,MAAM,CAAC;QACxE,OAAO,IAAI,CAAC,EAAE;IAChB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,MAAM,IAAI,MAAM;IAClB;AACF;AAEO,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,iQAAA,CAAA,UAAQ,AAAD,EAAE;IAChD,GAAG,8GAAA,CAAA,aAAU;IACb,WAAW;QACT,CAAA,GAAA,sNAAA,CAAA,UAAW,AAAD,EAAE;YACV,MAAM,WAAU,WAAW;gBACzB,MAAM,oBAAoB,mOAAA,CAAA,IAAC,CACxB,MAAM,CAAC;oBAAE,OAAO,mOAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK;oBAAI,UAAU,mOAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;gBAAG,GAChE,SAAS,CAAC;gBAEb,IAAI,kBAAkB,OAAO,EAAE;oBAC3B,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,kBAAkB,IAAI;oBAClD,MAAM,OAAO,MAAM,QAAQ;oBAC3B,IAAI,CAAC,MAAM,OAAO;oBAClB,MAAM,iBAAiB,MAAM,qGAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU,KAAK,QAAQ;oBAEnE,IAAI,gBAAgB,OAAO;gBAC/B;gBAEA,OAAO;YACT;QACF;KACD;AACH","debugId":null}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/andre/Documents/workspace/.git/vercel_next-js/nextjs-dashboard/app/lib/actions.ts"],"sourcesContent":["'use server';\r\n\r\nimport { signIn } from '@/auth';\r\nimport { AuthError } from 'next-auth';\r\nimport { z } from 'zod';\r\nimport { revalidatePath } from 'next/cache';\r\nimport { redirect } from 'next/navigation';\r\nimport postgres from 'postgres';\r\nconst sql = postgres(process.env.POSTGRES_URL!, { ssl: 'require' });\r\n \r\nconst FormSchema = z.object({\r\n  id: z.string(),\r\n  customerId: z.string({\r\n    invalid_type_error: 'Please select a customer.',\r\n  }),\r\n  amount: z.coerce\r\n    .number()\r\n    .gt(0, { message: 'Please enter an amount greater than $0.' }),\r\n  status: z.enum(['pending', 'paid'], {\r\n    invalid_type_error: 'Please select an invoice status.',\r\n  }),\r\n  date: z.string(),\r\n});\r\n \r\nconst CreateInvoice = FormSchema.omit({ id: true, date: true });\r\n\r\nexport type State = {\r\n  errors?: {\r\n    customerId?: string[];\r\n    amount?: string[];\r\n    status?: string[];\r\n  };\r\n  message?: string | null;\r\n};\r\n\r\nexport async function createInvoice(prevState: State, formData: FormData) {\r\n  // Validate form using Zod\r\n  const validatedFields = CreateInvoice.safeParse({\r\n    customerId: formData.get('customerId'),\r\n    amount: formData.get('amount'),\r\n    status: formData.get('status'),\r\n  });\r\n \r\n  // If form validation fails, return errors early. Otherwise, continue.\r\n  if (!validatedFields.success) {\r\n    return {\r\n      errors: validatedFields.error.flatten().fieldErrors,\r\n      message: 'Missing Fields. Failed to Create Invoice.',\r\n    };\r\n  }\r\n \r\n  // Prepare data for insertion into the database\r\n  const { customerId, amount, status } = validatedFields.data;\r\n  const amountInCents = amount * 100;\r\n  const date = new Date().toISOString().split('T')[0];\r\n \r\n  // Insert data into the database\r\n  try {\r\n    await sql`\r\n      INSERT INTO invoices (customer_id, amount, status, date)\r\n      VALUES (${customerId}, ${amountInCents}, ${status}, ${date})\r\n    `;\r\n  } catch (error) {\r\n    // If a database error occurs, return a more specific error.\r\n    return {\r\n      message: 'Database Error: Failed to Create Invoice.',\r\n    };\r\n  }\r\n \r\n  // Revalidate the cache for the invoices page and redirect the user.\r\n  revalidatePath('/dashboard/invoices');\r\n  redirect('/dashboard/invoices');\r\n}\r\n\r\n// Use Zod to update the expected types\r\nconst UpdateInvoice = FormSchema.omit({ id: true, date: true });\r\n\r\nexport async function updateInvoice(id: string, formData: FormData) {\r\n  const { customerId, amount, status } = UpdateInvoice.parse({\r\n    customerId: formData.get('customerId'),\r\n    amount: formData.get('amount'),\r\n    status: formData.get('status'),\r\n  });\r\n \r\n  const amountInCents = amount * 100;\r\n \r\n  try {\r\n    await sql`\r\n      UPDATE invoices\r\n      SET customer_id = ${customerId}, amount = ${amountInCents}, status = ${status}\r\n      WHERE id = ${id}\r\n    `;\r\n  } catch (error) {\r\n    console.error('Error updating invoice:', error);\r\n  }\r\n \r\n  revalidatePath('/dashboard/invoices');\r\n  redirect('/dashboard/invoices');\r\n}\r\n\r\nexport async function deleteInvoice(id: string) {\r\n  throw new Error('Failed to Delete Invoice');\r\n  \r\n  await sql`DELETE FROM invoices WHERE id = ${id}`;\r\n  revalidatePath('/dashboard/invoices');\r\n}\r\n\r\nexport async function authenticate(\r\n  prevState: string | undefined,\r\n  formData: FormData,\r\n) {\r\n  try {\r\n    await signIn('credentials', formData);\r\n  } catch (error) {\r\n    if (error instanceof AuthError) {\r\n      switch (error.type) {\r\n        case 'CredentialsSignin':\r\n          return 'Invalid credentials.';\r\n        default:\r\n          return 'Something went wrong.';\r\n      }\r\n    }\r\n    throw error;\r\n  }\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 292, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/andre/Documents/workspace/.git/vercel_next-js/nextjs-dashboard/.next-internal/server/app/login/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {authenticate as '6096c36abb8bc9e8504eed147619c5123914ece4bf'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 336, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/andre/Documents/workspace/.git/vercel_next-js/nextjs-dashboard/app/ui/acme-logo.tsx"],"sourcesContent":["import { GlobeAltIcon } from '@heroicons/react/24/outline';\r\nimport { lusitana } from '@/app/ui/fonts';\r\n\r\nexport default function AcmeLogo() {\r\n  return (\r\n    <div\r\n      className={`${lusitana.className} flex flex-row items-center leading-none text-white`}\r\n    >\r\n      <GlobeAltIcon className=\"h-12 w-12 rotate-[15deg]\" />\r\n      <p className=\"text-[44px]\">Acme</p>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;;;;AAEe,SAAS;IACtB,qBACE,uVAAC;QACC,WAAW,GAAG,mLAAA,CAAA,WAAQ,CAAC,SAAS,CAAC,mDAAmD,CAAC;;0BAErF,uVAAC,8SAAA,CAAA,eAAY;gBAAC,WAAU;;;;;;0BACxB,uVAAC;gBAAE,WAAU;0BAAc;;;;;;;;;;;;AAGjC","debugId":null}},
    {"offset": {"line": 376, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/andre/Documents/workspace/.git/vercel_next-js/nextjs-dashboard/app/ui/login-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/ui/login-form.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/ui/login-form.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,sVAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAyR,GACtT,uDACA","debugId":null}},
    {"offset": {"line": 388, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/andre/Documents/workspace/.git/vercel_next-js/nextjs-dashboard/app/ui/login-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/ui/login-form.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/ui/login-form.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,sVAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAqQ,GAClS,mCACA","debugId":null}},
    {"offset": {"line": 400, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 408, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/andre/Documents/workspace/.git/vercel_next-js/nextjs-dashboard/app/login/page.tsx"],"sourcesContent":["import AcmeLogo from '@/app/ui/acme-logo';\r\nimport LoginForm from '@/app/ui/login-form';\r\nimport { Suspense } from 'react';\r\n \r\nexport default function LoginPage() {\r\n  return (\r\n    <main className=\"flex items-center justify-center md:h-screen\">\r\n      <div className=\"relative mx-auto flex w-full max-w-[400px] flex-col space-y-2.5 p-4 md:-mt-32\">\r\n        <div className=\"flex h-20 w-full items-end rounded-lg bg-blue-500 p-3 md:h-36\">\r\n          <div className=\"w-32 text-white md:w-36\">\r\n            <AcmeLogo />\r\n          </div>\r\n        </div>\r\n        <Suspense>\r\n          <LoginForm />\r\n        </Suspense>\r\n      </div>\r\n    </main>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAEe,SAAS;IACtB,qBACE,uVAAC;QAAK,WAAU;kBACd,cAAA,uVAAC;YAAI,WAAU;;8BACb,uVAAC;oBAAI,WAAU;8BACb,cAAA,uVAAC;wBAAI,WAAU;kCACb,cAAA,uVAAC,0HAAA,CAAA,UAAQ;;;;;;;;;;;;;;;8BAGb,uVAAC,8SAAA,CAAA,WAAQ;8BACP,cAAA,uVAAC,2HAAA,CAAA,UAAS;;;;;;;;;;;;;;;;;;;;;AAKpB","debugId":null}}]
}