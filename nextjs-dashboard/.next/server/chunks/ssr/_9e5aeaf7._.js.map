{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/andre/Documents/workspace/.git/vercel_next-js/nextjs-dashboard/app/ui/button.tsx"],"sourcesContent":["import clsx from 'clsx';\r\n\r\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport function Button({ children, className, ...rest }: ButtonProps) {\r\n  return (\r\n    <button\r\n      {...rest}\r\n      className={clsx(\r\n        'flex h-10 items-center rounded-lg bg-blue-500 px-4 text-sm font-medium text-white transition-colors hover:bg-blue-400 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-500 active:bg-blue-600 aria-disabled:cursor-not-allowed aria-disabled:opacity-50',\r\n        className,\r\n      )}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;;AAMO,SAAS,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,MAAmB;IAClE,qBACE,uVAAC;QACE,GAAG,IAAI;QACR,WAAW,CAAA,GAAA,sLAAA,CAAA,UAAI,AAAD,EACZ,kTACA;kBAGD;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/andre/Documents/workspace/.git/vercel_next-js/nextjs-dashboard/app/lib/actions.ts"],"sourcesContent":["'use server';\r\n\r\nimport { signIn } from '@/auth';\r\nimport { AuthError } from 'next-auth';\r\nimport { z } from 'zod';\r\nimport { revalidatePath } from 'next/cache';\r\nimport { redirect } from 'next/navigation';\r\nimport postgres from 'postgres';\r\nconst sql = postgres(process.env.POSTGRES_URL!, { ssl: 'require' });\r\n \r\nconst FormSchema = z.object({\r\n  id: z.string(),\r\n  customerId: z.string({\r\n    invalid_type_error: 'Please select a customer.',\r\n  }),\r\n  amount: z.coerce\r\n    .number()\r\n    .gt(0, { message: 'Please enter an amount greater than $0.' }),\r\n  status: z.enum(['pending', 'paid'], {\r\n    invalid_type_error: 'Please select an invoice status.',\r\n  }),\r\n  date: z.string(),\r\n});\r\n \r\nconst CreateInvoice = FormSchema.omit({ id: true, date: true });\r\n\r\nexport type State = {\r\n  errors?: {\r\n    customerId?: string[];\r\n    amount?: string[];\r\n    status?: string[];\r\n  };\r\n  message?: string | null;\r\n};\r\n\r\nexport async function createInvoice(prevState: State, formData: FormData) {\r\n  // Validate form using Zod\r\n  const validatedFields = CreateInvoice.safeParse({\r\n    customerId: formData.get('customerId'),\r\n    amount: formData.get('amount'),\r\n    status: formData.get('status'),\r\n  });\r\n \r\n  // If form validation fails, return errors early. Otherwise, continue.\r\n  if (!validatedFields.success) {\r\n    return {\r\n      errors: validatedFields.error.flatten().fieldErrors,\r\n      message: 'Missing Fields. Failed to Create Invoice.',\r\n    };\r\n  }\r\n \r\n  // Prepare data for insertion into the database\r\n  const { customerId, amount, status } = validatedFields.data;\r\n  const amountInCents = amount * 100;\r\n  const date = new Date().toISOString().split('T')[0];\r\n \r\n  // Insert data into the database\r\n  try {\r\n    await sql`\r\n      INSERT INTO invoices (customer_id, amount, status, date)\r\n      VALUES (${customerId}, ${amountInCents}, ${status}, ${date})\r\n    `;\r\n  } catch (error) {\r\n    // If a database error occurs, return a more specific error.\r\n    return {\r\n      message: 'Database Error: Failed to Create Invoice.',\r\n    };\r\n  }\r\n \r\n  // Revalidate the cache for the invoices page and redirect the user.\r\n  revalidatePath('/dashboard/invoices');\r\n  redirect('/dashboard/invoices');\r\n}\r\n\r\n// Use Zod to update the expected types\r\nconst UpdateInvoice = FormSchema.omit({ id: true, date: true });\r\n\r\nexport async function updateInvoice(id: string, formData: FormData) {\r\n  const { customerId, amount, status } = UpdateInvoice.parse({\r\n    customerId: formData.get('customerId'),\r\n    amount: formData.get('amount'),\r\n    status: formData.get('status'),\r\n  });\r\n \r\n  const amountInCents = amount * 100;\r\n \r\n  try {\r\n    await sql`\r\n      UPDATE invoices\r\n      SET customer_id = ${customerId}, amount = ${amountInCents}, status = ${status}\r\n      WHERE id = ${id}\r\n    `;\r\n  } catch (error) {\r\n    console.error('Error updating invoice:', error);\r\n  }\r\n \r\n  revalidatePath('/dashboard/invoices');\r\n  redirect('/dashboard/invoices');\r\n}\r\n\r\nexport async function deleteInvoice(id: string) {\r\n  throw new Error('Failed to Delete Invoice');\r\n  \r\n  await sql`DELETE FROM invoices WHERE id = ${id}`;\r\n  revalidatePath('/dashboard/invoices');\r\n}\r\n\r\nexport async function authenticate(\r\n  prevState: string | undefined,\r\n  formData: FormData,\r\n) {\r\n  try {\r\n    await signIn('credentials', formData);\r\n  } catch (error) {\r\n    if (error instanceof AuthError) {\r\n      switch (error.type) {\r\n        case 'CredentialsSignin':\r\n          return 'Invalid credentials.';\r\n        default:\r\n          return 'Something went wrong.';\r\n      }\r\n    }\r\n    throw error;\r\n  }\r\n}"],"names":[],"mappings":";;;;;;IAmCsB,gBAAA,WAAA,GAAA,CAAA,GAAA,+TAAA,CAAA,wBAAA,EAAA,8CAAA,+TAAA,CAAA,aAAA,EAAA,KAAA,GAAA,+TAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/andre/Documents/workspace/.git/vercel_next-js/nextjs-dashboard/app/ui/invoices/create-form.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { CustomerField } from '@/app/lib/definitions';\r\nimport Link from 'next/link';\r\nimport {\r\n  CheckIcon,\r\n  ClockIcon,\r\n  CurrencyDollarIcon,\r\n  UserCircleIcon,\r\n} from '@heroicons/react/24/outline';\r\nimport { Button } from '@/app/ui/button';\r\nimport { createInvoice, State } from '@/app/lib/actions';\r\nimport { useActionState } from 'react';\r\n\r\nexport default function Form({ customers }: { customers: CustomerField[] }) {\r\n  const initialState: State = { message: null, errors: {} };\r\n  const [state, formAction] = useActionState(createInvoice, initialState);\r\n  return (\r\n    <form action={formAction}>\r\n      <div className=\"rounded-md bg-gray-50 p-4 md:p-6\">\r\n        {/* Customer Name */}\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"customer\" className=\"mb-2 block text-sm font-medium\">\r\n            Choose customer\r\n          </label>\r\n          <div className=\"relative\">\r\n            <select\r\n              id=\"customer\"\r\n              name=\"customerId\"\r\n              className=\"peer block w-full cursor-pointer rounded-md border border-gray-200 py-2 pl-10 text-sm outline-2 placeholder:text-gray-500\"\r\n              defaultValue=\"\"\r\n              aria-describedby=\"customer-error\"\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select a customer\r\n              </option>\r\n              {customers.map((customer) => (\r\n                <option key={customer.id} value={customer.id}>\r\n                  {customer.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <UserCircleIcon className=\"pointer-events-none absolute left-3 top-1/2 h-[18px] w-[18px] -translate-y-1/2 text-gray-500\" />\r\n          </div>\r\n          <div id=\"customer-error\" aria-live=\"polite\" aria-atomic=\"true\">\r\n            {state.errors?.customerId &&\r\n              state.errors.customerId.map((error: string) => (\r\n                <p className=\"mt-2 text-sm text-red-500\" key={error}>\r\n                  {error}\r\n                </p>\r\n              ))}\r\n          </div>\r\n        </div>\r\n\r\n\r\n        {/* Invoice Amount */}\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"amount\" className=\"mb-2 block text-sm font-medium\">\r\n            Choose an amount\r\n          </label>\r\n          <div className=\"relative mt-2 rounded-md\">\r\n            <div className=\"relative\">\r\n              <input\r\n                id=\"amount\"\r\n                name=\"amount\"\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                placeholder=\"Enter USD amount\"\r\n                className=\"peer block w-full rounded-md border border-gray-200 py-2 pl-10 text-sm outline-2 placeholder:text-gray-500\"\r\n                aria-describedby=\"amount-error\"\r\n              />\r\n              <CurrencyDollarIcon className=\"pointer-events-none absolute left-3 top-1/2 h-[18px] w-[18px] -translate-y-1/2 text-gray-500 peer-focus:text-gray-900\" />\r\n            </div>\r\n            <div id=\"amount-error\" aria-live=\"polite\" aria-atomic=\"true\">\r\n              {state.errors?.amount &&\r\n                state.errors.amount.map((error: string) => (\r\n                  <p className=\"mt-2 text-sm text-red-500\" key={error}>\r\n                    {error}\r\n                  </p>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Invoice Status */}\r\n        <fieldset>\r\n          <legend className=\"mb-2 block text-sm font-medium\">\r\n            Set the invoice status\r\n          </legend>\r\n          <div className=\"rounded-md border border-gray-200 bg-white px-[14px] py-3\">\r\n            <div className=\"flex gap-4\">\r\n              <div className=\"flex items-center\">\r\n                <input\r\n                  id=\"pending\"\r\n                  name=\"status\"\r\n                  type=\"radio\"\r\n                  value=\"pending\"\r\n                  className=\"h-4 w-4 cursor-pointer border-gray-300 bg-gray-100 text-gray-600 focus:ring-2\"\r\n                  aria-describedby=\"status-error\"\r\n                />\r\n                <label\r\n                  htmlFor=\"pending\"\r\n                  className=\"ml-2 flex cursor-pointer items-center gap-1.5 rounded-full bg-gray-100 px-3 py-1.5 text-xs font-medium text-gray-600\"\r\n                >\r\n                  Pending <ClockIcon className=\"h-4 w-4\" />\r\n                </label>\r\n              </div>\r\n              <div className=\"flex items-center\">\r\n                <input\r\n                  id=\"paid\"\r\n                  name=\"status\"\r\n                  type=\"radio\"\r\n                  value=\"paid\"\r\n                  className=\"h-4 w-4 cursor-pointer border-gray-300 bg-gray-100 text-gray-600 focus:ring-2\"\r\n                />\r\n                <label\r\n                  htmlFor=\"paid\"\r\n                  className=\"ml-2 flex cursor-pointer items-center gap-1.5 rounded-full bg-green-500 px-3 py-1.5 text-xs font-medium text-white\"\r\n                >\r\n                  Paid <CheckIcon className=\"h-4 w-4\" />\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div id=\"status-error\" aria-live=\"polite\" aria-atomic=\"true\">\r\n              {state.errors?.status &&\r\n                state.errors.status.map((error: string) => (\r\n                  <p className=\"mt-2 text-sm text-red-500\" key={error}>\r\n                    {error}\r\n                  </p>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        </fieldset>\r\n      </div>\r\n      <div className=\"mt-6 flex justify-end gap-4\">\r\n        <Link\r\n          href=\"/dashboard/invoices\"\r\n          className=\"flex h-10 items-center rounded-lg bg-gray-100 px-4 text-sm font-medium text-gray-600 transition-colors hover:bg-gray-200\"\r\n        >\r\n          Cancel\r\n        </Link>\r\n        <Button type=\"submit\">Create Invoice</Button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 394, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/andre/Documents/workspace/.git/vercel_next-js/nextjs-dashboard/node_modules/.pnpm/%40heroicons%2Breact%402.2.0_react%4019.1.0/node_modules/%40heroicons/react/24/outline/esm/CheckIcon.js"],"sourcesContent":["import * as React from \"react\";\nfunction CheckIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m4.5 12.75 6 6 9-13.5\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CheckIcon);\nexport default ForwardRef;"],"names":[],"mappings":";;;AAAA;;AACA,SAAS,UAAU,EACjB,KAAK,EACL,OAAO,EACP,GAAG,OACJ,EAAE,MAAM;IACP,OAAO,WAAW,GAAE,8SAAA,CAAA,gBAAmB,CAAC,OAAO,OAAO,MAAM,CAAC;QAC3D,OAAO;QACP,MAAM;QACN,SAAS;QACT,aAAa;QACb,QAAQ;QACR,eAAe;QACf,aAAa;QACb,KAAK;QACL,mBAAmB;IACrB,GAAG,QAAQ,QAAQ,WAAW,GAAE,8SAAA,CAAA,gBAAmB,CAAC,SAAS;QAC3D,IAAI;IACN,GAAG,SAAS,MAAM,WAAW,GAAE,8SAAA,CAAA,gBAAmB,CAAC,QAAQ;QACzD,eAAe;QACf,gBAAgB;QAChB,GAAG;IACL;AACF;AACA,MAAM,aAAa,WAAW,GAAG,8SAAA,CAAA,aAAgB,CAAC;uCACnC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 432, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/andre/Documents/workspace/.git/vercel_next-js/nextjs-dashboard/node_modules/.pnpm/%40heroicons%2Breact%402.2.0_react%4019.1.0/node_modules/%40heroicons/react/24/outline/esm/ClockIcon.js"],"sourcesContent":["import * as React from \"react\";\nfunction ClockIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 6v6h4.5m4.5 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ClockIcon);\nexport default ForwardRef;"],"names":[],"mappings":";;;AAAA;;AACA,SAAS,UAAU,EACjB,KAAK,EACL,OAAO,EACP,GAAG,OACJ,EAAE,MAAM;IACP,OAAO,WAAW,GAAE,8SAAA,CAAA,gBAAmB,CAAC,OAAO,OAAO,MAAM,CAAC;QAC3D,OAAO;QACP,MAAM;QACN,SAAS;QACT,aAAa;QACb,QAAQ;QACR,eAAe;QACf,aAAa;QACb,KAAK;QACL,mBAAmB;IACrB,GAAG,QAAQ,QAAQ,WAAW,GAAE,8SAAA,CAAA,gBAAmB,CAAC,SAAS;QAC3D,IAAI;IACN,GAAG,SAAS,MAAM,WAAW,GAAE,8SAAA,CAAA,gBAAmB,CAAC,QAAQ;QACzD,eAAe;QACf,gBAAgB;QAChB,GAAG;IACL;AACF;AACA,MAAM,aAAa,WAAW,GAAG,8SAAA,CAAA,aAAgB,CAAC;uCACnC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 470, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/andre/Documents/workspace/.git/vercel_next-js/nextjs-dashboard/node_modules/.pnpm/%40heroicons%2Breact%402.2.0_react%4019.1.0/node_modules/%40heroicons/react/24/outline/esm/CurrencyDollarIcon.js"],"sourcesContent":["import * as React from \"react\";\nfunction CurrencyDollarIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 6v12m-3-2.818.879.659c1.171.879 3.07.879 4.242 0 1.172-.879 1.172-2.303 0-3.182C13.536 12.219 12.768 12 12 12c-.725 0-1.45-.22-2.003-.659-1.106-.879-1.106-2.303 0-3.182s2.9-.879 4.006 0l.415.33M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CurrencyDollarIcon);\nexport default ForwardRef;"],"names":[],"mappings":";;;AAAA;;AACA,SAAS,mBAAmB,EAC1B,KAAK,EACL,OAAO,EACP,GAAG,OACJ,EAAE,MAAM;IACP,OAAO,WAAW,GAAE,8SAAA,CAAA,gBAAmB,CAAC,OAAO,OAAO,MAAM,CAAC;QAC3D,OAAO;QACP,MAAM;QACN,SAAS;QACT,aAAa;QACb,QAAQ;QACR,eAAe;QACf,aAAa;QACb,KAAK;QACL,mBAAmB;IACrB,GAAG,QAAQ,QAAQ,WAAW,GAAE,8SAAA,CAAA,gBAAmB,CAAC,SAAS;QAC3D,IAAI;IACN,GAAG,SAAS,MAAM,WAAW,GAAE,8SAAA,CAAA,gBAAmB,CAAC,QAAQ;QACzD,eAAe;QACf,gBAAgB;QAChB,GAAG;IACL;AACF;AACA,MAAM,aAAa,WAAW,GAAG,8SAAA,CAAA,aAAgB,CAAC;uCACnC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 508, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/andre/Documents/workspace/.git/vercel_next-js/nextjs-dashboard/node_modules/.pnpm/%40heroicons%2Breact%402.2.0_react%4019.1.0/node_modules/%40heroicons/react/24/outline/esm/UserCircleIcon.js"],"sourcesContent":["import * as React from \"react\";\nfunction UserCircleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M17.982 18.725A7.488 7.488 0 0 0 12 15.75a7.488 7.488 0 0 0-5.982 2.975m11.963 0a9 9 0 1 0-11.963 0m11.963 0A8.966 8.966 0 0 1 12 21a8.966 8.966 0 0 1-5.982-2.275M15 9.75a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(UserCircleIcon);\nexport default ForwardRef;"],"names":[],"mappings":";;;AAAA;;AACA,SAAS,eAAe,EACtB,KAAK,EACL,OAAO,EACP,GAAG,OACJ,EAAE,MAAM;IACP,OAAO,WAAW,GAAE,8SAAA,CAAA,gBAAmB,CAAC,OAAO,OAAO,MAAM,CAAC;QAC3D,OAAO;QACP,MAAM;QACN,SAAS;QACT,aAAa;QACb,QAAQ;QACR,eAAe;QACf,aAAa;QACb,KAAK;QACL,mBAAmB;IACrB,GAAG,QAAQ,QAAQ,WAAW,GAAE,8SAAA,CAAA,gBAAmB,CAAC,SAAS;QAC3D,IAAI;IACN,GAAG,SAAS,MAAM,WAAW,GAAE,8SAAA,CAAA,gBAAmB,CAAC,QAAQ;QACzD,eAAe;QACf,gBAAgB;QAChB,GAAG;IACL;AACF;AACA,MAAM,aAAa,WAAW,GAAG,8SAAA,CAAA,aAAgB,CAAC;uCACnC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 548, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/andre/Documents/workspace/.git/vercel_next-js/nextjs-dashboard/node_modules/.pnpm/next%4015.4.0-canary.128_reac_328c8fcddf36fc86c74632b09435ed18/node_modules/next/src/build/webpack/loaders/next-flight-loader/action-client-wrapper.ts"],"sourcesContent":["// This file must be bundled in the app's client layer, it shouldn't be directly\n// imported by the server.\n\nexport { callServer } from 'next/dist/client/app-call-server'\nexport { findSourceMapURL } from 'next/dist/client/app-find-source-map-url'\n\n// A noop wrapper to let the Flight client create the server reference.\n// See also: https://github.com/facebook/react/pull/26632\n// eslint-disable-next-line import/no-extraneous-dependencies\nexport { createServerReference } from 'react-server-dom-webpack/client'\n"],"names":["callServer","createServerReference","findSourceMapURL"],"mappings":"AAAA,gFAAgF;AAChF,0BAA0B;;;;;;;;;;;;;;;;IAEjBA,UAAU,EAAA;eAAVA,eAAAA,UAAU;;IAMVC,qBAAqB,EAAA;eAArBA,QAAAA,qBAAqB;;IALrBC,gBAAgB,EAAA;eAAhBA,qBAAAA,gBAAgB;;;+BADE;qCACM;wBAKK","ignoreList":[0],"debugId":null}}]
}